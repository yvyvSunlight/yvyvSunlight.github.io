<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>再探GOT&amp;PLT及延迟绑定</title>
    <link href="/2024/11/04/%E5%86%8D%E6%8E%A2GOT-PLT%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/"/>
    <url>/2024/11/04/%E5%86%8D%E6%8E%A2GOT-PLT%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/</url>
    
    <content type="html"><![CDATA[<p>之前刚学完GOT&amp;PLT及延迟绑定，转头用的时候就感觉变得有点陌生，<br>看来还是得把详细的过程和分析总结写下来呀。</p><p>先挖个坑，有空就写</p>]]></content>
    
    
    <categories>
      
      <category>pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ret2libc</title>
    <link href="/2024/11/04/ret2libc/"/>
    <url>/2024/11/04/ret2libc/</url>
    
    <content type="html"><![CDATA[<h3 id="什么样的题是ret2libc，这类题该怎么做？"><a href="#什么样的题是ret2libc，这类题该怎么做？" class="headerlink" title="什么样的题是ret2libc，这类题该怎么做？"></a>什么样的题是ret2libc，这类题该怎么做？</h3><p>程序的特征是：<br><strong>能</strong>进行栈<strong>溢出</strong>，没有<code>system</code>函数，也没有<code>&quot;/bin/sh&quot;</code>参数<br>无法进行常规的ret2text<br>ret2libc的关键是获取libc的版本，所以需要获得<code>libc.so</code>中函数的偏移量，<br>所以<strong>需要</strong>一个<strong>输出函数</strong>，<code>.got.plt</code>中需要有<strong>libc中的函数</strong>，我们才能获取到libc中函数的<strong>真实地址</strong></p><p>从而利用<strong>LibcSearcher</strong>确定libc版本</p><hr><p>LibcSearcher原理？<br>基地址范围？</p><hr><p>前置知识：<br>libc中有<code>system</code>函数，而<code>libc.so</code>动态偏移链接库中的函数之间的相对偏移是固定的</p><p>ALSR保护不会随机内存地址的后12位（后3个字节）</p><p><code>pwntools</code>基本语法：<br><code>elf.got()</code>返回的是<code>.got</code>中函数 相对plt基地址的偏移量<br><code>elf.plt()</code>返回的是<code>.plt</code>中函数 相对got基地址的偏移量</p>]]></content>
    
    
    <categories>
      
      <category>pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ret2xx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python语法之字典</title>
    <link href="/2024/11/04/python%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%AD%97%E5%85%B8/"/>
    <url>/2024/11/04/python%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%AD%97%E5%85%B8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>puts函数</title>
    <link href="/2024/11/01/puts%E5%87%BD%E6%95%B0/"/>
    <url>/2024/11/01/puts%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p>做了一个赣ctf上的题，没想到这漏洞如此简单我竟然没发现，真是浅薄了，<br>在此记录一下</p><p><code>puts()</code>函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">puts</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *s)</span>;<br></code></pre></td></tr></table></figure><p><code>puts()</code>函数的作用是持续输出字符指针<code>s</code>指向的字符，直到遇到空字符<code>\0</code>为止，</p><p>假设<code>char s[256]</code>中<code>s</code>指向的内容是由用户输入的</p><p>那么用户可以输入一个长度超过256的字符串<br>即使机器只读取前256个字符，那么也会导致<code>s[256]</code>中没有<code>\0</code>字符，</p><p>从而使puts持续输出s以及s之后的内存内容（以字符串的形式），直到遇到<code>\0</code>为止</p><p>从而造成内存泄漏</p>]]></content>
    
    
    <categories>
      
      <category>pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>泄漏信息</tag>
      
      <tag>glibc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python语法之关键字try</title>
    <link href="/2024/11/01/python%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%85%B3%E9%94%AE%E5%AD%97try/"/>
    <url>/2024/11/01/python%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%85%B3%E9%94%AE%E5%AD%97try/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>obsidian-hexo解决图片显示问题</title>
    <link href="/2024/10/30/obsidian-hexo%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    <url>/2024/10/30/obsidian-hexo%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>建立博客后遇到的第一个问题就是hexo上的图片显示问题</p><hr><p>想到一种考虑，把图片全都放在一个文件夹里试试<br>挖个坑<br>有空试试</p><p>测试图片</p><p>测试失败</p><p>测试图片2</p><p>好，试过了，确实不行<br>现有obsidian设置和hexo设置无法满足这个要求</p><hr><p>只有原先上面的方法是行的（目前最优）</p><p>成功</p><p>但可以考虑设置<code>_config.yml</code>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>这样在<code>hexo new post &lt;name&gt;</code>时，就不会再多创建一个可能用不到的资源文件夹<br>在obsidian中粘贴时自动创建即可</p><p>注意：<br>obsidian插件<code>Custom Attachment Loaction</code>设置中附件的命名问题</p><hr><p>发现：<br>排在前面的url错误的图片竟然也会影响后面的所有图片，使后面的图片显示不出来</p><hr><p>md，还是得改成true<br><img src="/2024/10/29/hello-world/o%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/file_20241105200303132.png"></p><p><img src="/2024/10/29/hello-world/o%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/file-20241105190339792.png"></p><p><img src="/2024/10/29/hello-world/o%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/file.png"></p><p>和插件设置中附件文件夹中文件的命名倒是没关系</p>]]></content>
    
    
    
    <tags>
      
      <tag>建站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>new_article</title>
    <link href="/2024/10/29/new-article/"/>
    <url>/2024/10/29/new-article/</url>
    
    <content type="html"><![CDATA[<h1 id="这是一篇测试文章"><a href="#这是一篇测试文章" class="headerlink" title="这是一篇测试文章"></a>这是一篇测试文章</h1><p>使用hexo的步骤</p><p>新建about页：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo new page about<br></code></pre></td></tr></table></figure><p>添加layout</p><p>新建文章</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo new post new_article<br></code></pre></td></tr></table></figure><h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><p><img src="/_posts/new-article/file.png"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>再试？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/10/29/hello-world/"/>
    <url>/2024/10/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
